generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Consent {
  consentId     String                @id @unique @default(uuid())
  txnId         String
  userid        String?
  orgid         String                @db.VarChar(255)
  expiry        DateTime?              @db.DateTime(0)
  consentRequestId String
  consentDataId String?
}

model ConsentData {
  id          Int       @id
  dataTypeRef Int?
  dataRef     String?   @db.VarChar(255)
  hash        String?   @db.VarChar(255)
  sizeBytes   Int?
  name        String?   @db.VarChar(255)
  dateCreated DateTime? @db.DateTime(0)
}

model ConsentData_DataType {
  ConsentData_dataTypeRef Int
  DataType_id             Int

  @@id([ConsentData_dataTypeRef, DataType_id])
}

model ConsentRequests {
  txnId       String  @unique @db.VarChar(255)
  consentRequestId   String  @id @unique @default(uuid())
  title       String @db.VarChar(255)
  description String @db.VarChar(255)
  dataId      String @db.VarChar(255)
  callbackUrl String @db.VarChar(255)
}

model DataType {
  id     Int     @id @default(autoincrement())
  typeId String  @default(uuid())
  schema String @db.VarChar(255)
}

model Requester {
  id          String  @unique @id @default(uuid())
  user        User?
  displayname String @db.VarChar(255)
  banner      String? @db.VarChar(255)
  logo      String? @db.VarChar(255)
}

model TxnLog {
  txnId     String           @id @unique @default(uuid())
  chainId   String           @default(uuid())
  TxnStatus TxnLog_TxnStatus
  datetime  DateTime         @db.DateTime(0) @default(now())
  parent    String?          @db.VarChar(255)
}

model User {
 id     String @id @db.VarChar(255)
 firstname String? @db.VarChar(255)
 lastname String? @db.VarChar(255)
 nickname String @db.VarChar(255)
 email String @db.VarChar(255)
 emailVerified Boolean
 requester Requester? @relation(fields: [requesterId], references: [id])
 requesterId String? @unique
}

enum TxnLog_TxnStatus {
  CREATED
  IN_PROGRESS
  ACCEPTED
  REJECTED
  FULFILLED
  VOIDED
}
